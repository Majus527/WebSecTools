import re

# 禁止扫描的IP
FORBIDDEN_IP_RULE = '(^0\.0\.0\.0$)' \
                    '|(120.55.58.175)' \
                    '|(^10\.(1\d{2}|2[0-4]\d|25[0-5]|[1-9]\d|[0-9])\.(1\d{2}|2[0-4]\d|25[0-5]|[1-9]\d|[0-9])\.(1\d{2}|2[0-4]\d|25[0-5]|[1-9]\d|[0-9])$)' \
                    '|(^127\.(1\d{2}|2[0-4]\d|25[0-5]|[1-9]\d|[0-9])\.(1\d{2}|2[0-4]\d|25[0-5]|[1-9]\d|[0-9])\.(1\d{2}|2[0-4]\d|25[0-5]|[1-9]\d|[0-9])$)' \
                    '|(^172\.(1[6789]|2[0-9]|3[01])\.(1\d{2}|2[0-4]\d|25[0-5]|[1-9]\d|[0-9])\.(1\d{2}|2[0-4]\d|25[0-5]|[1-9]\d|[0-9])$)' \
                    '|(^192\.168\.(1\d{2}|2[0-4]\d|25[0-5]|[1-9]\d|[0-9])\.(1\d{2}|2[0-4]\d|25[0-5]|[1-9]\d|[0-9])$)'

def check_ip(ipaddr=''):
    """
    校验IP合法性
    :param ipaddr:
    :return: True|False
    """
    ipaddr = (str(ipaddr)).strip()  # strip移除字符串头尾指定的字符（默认为空格或换行符）
    # IP地址的长度范围(6, 16)
    if (6 < len(ipaddr)) and (len(ipaddr) < 16):
        # 判断是否在禁止IP列表中
        if re.search(FORBIDDEN_IP_RULE, ipaddr):
            return True
        # ip地址都是（1~255）.（0~255）.（0~255）.（0~255）的格式
        rule = r'^(1\d{2}|2[0-4]\d|25[0-5]|[1-9]\d|[1-9])\.(1\d{2}|2[0-4]\d|25[0-5]|[1-9]\d|\d)\.(1\d{2}|2[0-4]\d|25[0-5]|[1-9]\d|\d)\.(1\d{2}|2[0-4]\d|25[0-5]|[1-9]\d|\d)$'
        compile_ip = re.compile(rule)
        if compile_ip.match(ipaddr):
            return True
    return False


